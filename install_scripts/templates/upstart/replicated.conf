description "Replicated Service"
author "Replicated.com"
start on replicated-docker or started docker
stop on runlevel [!2345] or stopping docker
respawn
respawn limit 5 30
normal exit 0
pre-start script
    /bin/mkdir -p /var/run/replicated /var/lib/replicated /var/lib/replicated/statsd {{ premkit_data_dir }}
    /bin/chown -R ${REPLICATED_USER_ID}:${DOCKER_GROUP_ID} /var/run/replicated /var/lib/replicated {{ premkit_data_dir }}
    /bin/chmod -R 755 /var/lib/replicated/tmp 2>/dev/null || true
    /usr/bin/docker rm -f replicated 2>/dev/null || true
    COUNTER=0
    while \$(/usr/bin/docker ps -a | grep --quiet "replicated:current") && [ \$COUNTER -lt 3 ]; do
        #Try removing the container again, but don't suppress output this time
        /usr/bin/docker rm -f replicated || true
        sleep 1
        COUNTER=\$((\$COUNTER+1))
    done
end script
pre-stop script
    /usr/bin/docker stop replicated
end script
script
    . ${CONFDIR}/replicated
    exec su -s /bin/sh -c 'exec "\$0" "\$@"' ${REPLICATED_USERNAME} -- /usr/bin/docker run --name=replicated \\
        -p {{ replicated_port_range }} \\
        -u ${REPLICATED_USER_ID}:${DOCKER_GROUP_ID} \\{% if replicated_root_volume_mount %}
    {{ replicated_root_volume_mount }} \\
{%- endif %}
        -v /var/lib/replicated:/var/lib/replicated \\
        -v /var/run/docker.sock:/host/var/run/docker.sock \\
        -v /proc:/host/proc:ro \\
        -v /etc:/host/etc:ro \\
        -v /etc/os-release:/host/etc/os-release:ro \\{% if replicated_additional_etc_mounts %}
    {{ replicated_additional_etc_mounts }} \\
{%- endif %}
        ${REPLICATED_TRUSTED_CERT_MOUNT} \\
        -v /var/run/replicated:/var/run/replicated \\
        --security-opt ${SELINUX_REPLICATED_DOMAIN_LABEL} \\
        -e LOCAL_ADDRESS=\${PRIVATE_ADDRESS} \\
        -e RELEASE_CHANNEL=\${RELEASE_CHANNEL} \\
        \$REPLICATED_OPTS \\
        {{ replicated_docker_host }}/replicated/replicated:current
end script
